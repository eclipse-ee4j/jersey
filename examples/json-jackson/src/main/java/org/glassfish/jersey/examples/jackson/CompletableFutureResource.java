package org.glassfish.jersey.examples.jackson;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.CompletableFuture;

import static java.util.concurrent.CompletableFuture.completedFuture;

/**
 * A sample resource whose response type is a CompletableFuture
 *
 * @author Mageshwaran Rajendran (mageshwaranr at gmail.com)
 */
@Path("/completableFutureResource")
public class CompletableFutureResource {

    // the resource JSON representation will be serialized by Jackson JAX-RS provider,
    // while the XML will still be generated by JAXB
    @GET
    @Path("/bean")
    @Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
    public CompletableFuture<EmptyArrayBean> getBean() {
        return completedFuture(new EmptyArrayBean());
    }

    @GET
    @Path("/emptyList")
    @Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
    public CompletableFuture<List<String>> getEmptyList() {
        return completedFuture(new ArrayList<>());
    }

    @GET
    @Path("/list")
    @Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
    public CompletableFuture<List<String>> getList() {
        return completedFuture(Collections.singletonList("dummy"));
    }
}
